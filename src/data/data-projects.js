export const projects = [
    {
        id: 1,
        title: "FridgeToFork",
        stack_tags: ["Python", "Flask", "YOLO", "HTML", "JavaScript", "Tailwind", "PyTorch", "Spoonacular API"],
        quick_description: "A web app that identifies ingredients from photos and suggests recipes you can make with them.",
        github_href: "https://github.com/mjwanless/BD-Food-Detection-App",
        example_img: "/images/projects/fridge-to-fork/1.png",
        project_imgs: [
            "/images/projects/fridge-to-fork/1.png",
            "/images/projects/fridge-to-fork/2.png",
            "/images/projects/fridge-to-fork/3.png",
            "/images/projects/fridge-to-fork/4.png",
            "/images/projects/fridge-to-fork/5.png",
        ],
        full_description:
            "FridgeToFork is a web application that helps users discover recipes based on ingredients they already have. By capturing ingredients using a webcam or uploading an image, the app uses a custom YOLO model for AI-powered ingredient detection. Users can manually edit or add ingredients, filter recipes by cuisine type and dietary restrictions, and view detailed recipe information with links to full instructions. The frontend is built with HTML, Tailwind CSS, and JavaScript, while the backend is powered by Flask.",
    },
    {
        id: 2,
        title: "FreshPlate",
        stack_tags: ["HTML", "CSS", "EJS", "Node.js", "Express", "MongoDB"],
        quick_description: "A recipe discovery and management app featuring personalized recommendations and a shopping cart for ingredients.",
        github_href: "https://github.com/mjwanless/2800-202410-DTC13",
        example_img: "/images/projects/Freshplate/1.jpg",
        project_imgs: [
            "/images/projects/Freshplate/1.jpg",
            "/images/projects/Freshplate/2.jpg",
            "/images/projects/Freshplate/3.jpg",
            "/images/projects/Freshplate/4.jpg",
            "/images/projects/Freshplate/5.png",
            "/images/projects/Freshplate/6.png",
            "/images/projects/Freshplate/7.png",
            "/images/projects/Freshplate/8.png",
            "/images/projects/Freshplate/9.png",
        ],
        full_description:
            "FreshPlate is a web application that helps users find and organize recipes. The app offers personalized recipe recommendations based on user preferences and dietary restrictions. Users can browse recipes, save favorites, and add ingredients to a shopping cart. The project was developed by a team of five developers, using HTML, CSS, and EJS for the frontend, with Node.js, Express, and MongoDB handling the backend and database functions.",
    },
    {
        id: 3,
        title: "Trash to Treasure",
        stack_tags: ["HTML", "CSS", "JavaScript", "Firebase", "Mapbox API"],
        quick_description:
            "A recycling helper app that lets users figure out what materials are recyclable and shows the nearest drop-off depots using an interactive map.",
        github_href: "https://github.com/mjwanless/Trash_To_Treasure",
        example_img: "/images/projects/Trash-to-treasure/1.png",
        project_imgs: [
            "/images/projects/Trash-to-treasure/1.png",
            "/images/projects/Trash-to-treasure/2.png",
            "/images/projects/Trash-to-treasure/3.png",
            "/images/projects/Trash-to-treasure/4.png",
            "/images/projects/Trash-to-treasure/5.png",
            "/images/projects/Trash-to-treasure/6.png",
            "/images/projects/Trash-to-treasure/7.png",
            "/images/projects/Trash-to-treasure/8.png",
            "/images/projects/Trash-to-treasure/9.png",
            "/images/projects/Trash-to-treasure/10.png",
            "/images/projects/Trash-to-treasure/11.png",
            "/images/projects/Trash-to-treasure/12.png",
            "/images/projects/Trash-to-treasure/13.png",
            "/images/projects/Trash-to-treasure/14.png",
            "/images/projects/Trash-to-treasure/15.png",
            "/images/projects/Trash-to-treasure/16.png",
        ],
        full_description:
            "Trash to Treasure is a web app built to make recycling simpler. Users can search or browse common household materials to learn how to properly dispose of or recycle them. It uses the Mapbox API to show nearby depots based on the user's location and provides helpful context for each item type. The app is fully client-side and powered by Firebase for storage and hosting. The app was designed with sustainability in mind, making it easier for people to access recycling information without needing to navigate through multiple complex websites and resources. Features include categorized material info, real-time location-based depot lookup, and a clean, responsive UI.",
    },
    {
        id: 4,
        title: "AI Lyrics Generator",
        stack_tags: ["JavaScript", "HTML", "Tailwind", "HuggingFace AI Models"],
        quick_description: "A web application that generates song lyrics using AI through a RESTful API.",
        github_href: "https://github.com/mjwanless/IA-restful-AI-Project",
        example_img: "/images/projects/Restful-api-ai-app/1.png",
        project_imgs: [
            "/images/projects/Restful-api-ai-app/1.png",
            "/images/projects/Restful-api-ai-app/2.png",
            "/images/projects/Restful-api-ai-app/3.png",
            "/images/projects/Restful-api-ai-app/4.png",
        ],
        full_description:
            "This project is a web application that creates AI-generated song lyrics based on user inputs. It uses a RESTful API architecture to connect the frontend interface with HuggingFace's AI models, hosted on DigitalOcean. The application features a user interface built with HTML and styled with Tailwind, while JavaScript manages the API calls and response handling.",
    },
    {
        id: 5,
        title: "MalcolmWanless.com (This site!)",
        stack_tags: ["Next.js", "TypeScript", "Tailwind", "React", "Vercel", "Aceternity UI", "shadcn/ui"],
        quick_description: "My personal website where I showcase my coding projects and share a bit about myself.",
        github_href: "https://github.com/mjwanless/portfolio-site",
        example_img: "",
        project_imgs: [],
        full_description: "A quick and easy way for me to show off some of my work and keep my info up-to-date. Enjoy!",
    },
    {
        id: 6,
        title: "AI/ML-based Credit Default Prediction",
        stack_tags: ["Python", "scikit-learn", "Pandas", "NumPy", "Matplotlib", "Machine Learning", "Ensemble Learning"],
        quick_description: "A machine learning project predicting credit defaults using ensemble models and feature engineering.",
        github_href: "https://github.com/mjwanless/PML-Assignment-2",
        example_img: "",
        project_imgs: [],
        full_description:
            "This project uses machine learning to predict whether customers will default on credit payments. It implements multiple models including random forests, gradient boosting, and neural networks, combining them through ensemble stacking for better accuracy. The process involves data preparation, feature engineering, model training, and performance evaluation. The dataset includes customer payment history, demographic details, and financial behavior patterns.",
    },
    {
        id: 7,
        title: "Cat Shelter Outcomes Prediction",
        stack_tags: ["Python", "Pandas", "scikit-learn", "Machine Learning"],
        quick_description: "A machine learning project predicting outcomes for shelter cats based on intake attributes.",
        github_href: "https://github.com/mjwanless/PML_assignment_1",
        example_img: "",
        project_imgs: [],
        full_description:
            "This project uses machine learning to predict what will likely happen to a cat after they enter an animal shelter. Using data like the cat's age, intake time, coat color, and whether they're spayed/neutered, the model can forecast if a cat will be adopted, returned to owner, or face other outcomes. The project involved cleaning the shelter's data, creating useful features, analyzing patterns, testing different models, and combining them for better results.",
    },
    {
        id: 8,
        title: "Climate in a Box",
        stack_tags: ["Arduino", "C++", "Various Sensors"],
        quick_description: "A smart planter system designed to automate plant care through a controlled environment using Arduino.",
        github_href: "https://github.com/mjwanless/Planter_Project",
        example_img: "/images/projects/Planter/1.jpeg",
        project_imgs: [
            "/images/projects/Planter/1.jpeg",
            "/images/projects/Planter/2.jpeg",
            "/images/projects/Planter/3.jpeg",
            "/images/projects/Planter/4.jpeg",
            "/images/projects/Planter/5.jpeg",
        ],
        full_description:
            '"Climate in a Box" is a smart farming system that provides automated plant care in a controlled environment. The system uses an Arduino Uno to monitor and control key variables affecting plant growth, such as light timing and soil moisture. Users can set parameters including light schedules and minimum soil moisture levels, and the system adjusts these conditions to maintain a good growth environment.',
    },
    {
        id: 9,
        title: "Barcode Scanner Robot",
        stack_tags: ["C", "EV3", "MATLAB"],
        quick_description:
            "An EV3 robot that scans barcodes using a color sensor, processes the data, and decodes characters through MATLAB analysis.",
        github_href: "https://github.com/mjwanless/Barcode_Scanner_Robot",
        example_img: "",
        project_imgs: [],
        full_description:
            "This project involved designing and programming an EV3 robot capable of scanning barcodes using a color sensor. As the robot moves over a barcode, it records color intensity values, which are then saved to a text file. These values are converted into a CSV format and analyzed using MATLAB scripts to decode the corresponding characters. The project uses C for robot control with MATLAB for signal processing and character recognition.",
    },
    {
        id: 10,
        title: "Maze Generator Robot",
        stack_tags: ["RobotC", "EV3", "Algorithms"],
        quick_description: "An EV3 robot programmed to autonomously solve generated mazes using pathfinding algorithms.",
        github_href: "https://github.com/mjwanless/Maze_Generator_Robot",
        example_img: "",
        project_imgs: [],
        full_description:
            "This project is an EV3 robot that solves randomly generated mazes using pathfinding algorithms. The system includes a maze generation program that creates random mazes when physical mazes aren't available. The robot uses sensors to detect walls and navigate through the maze to find the exit. Developed with RobotC, the robot makes decisions autonomously based on its environment.",
    },
    {
        id: 11,
        title: "Colonel's Quest",
        stack_tags: ["Python"],
        quick_description: "A text-based adventure game where players challenge Colonel Sanders to claim his secret recipe.",
        github_href: "https://github.com/mjwanless/Colonels-quest",
        example_img: "/images/projects/colonels_quest/1.jpg",
        project_imgs: ["/images/projects/colonels_quest/1.jpg", "/images/projects/colonels_quest/2.jpg"],
        full_description:
            "Colonel's Quest is a text-based adventure game created in Python. Players navigate through a storyline where they confront Colonel Sanders to obtain his famous secret recipe. The game includes combat mechanics, inventory management, and decision-based gameplay that affects the story outcome. This project was developed for a Python programming course at BCIT.",
    },
    {
        id: 12,
        title: "Hangman",
        stack_tags: ["C", "Game Development"],
        quick_description: "A terminal-based Hangman game built using C for a final course project.",
        github_href: "https://github.com/mjwanless/CFinalProjectHangman",
        example_img: "",
        project_imgs: [],
        full_description:
            "This project is a command-line Hangman game developed as a final project for a C programming course. The game features a randomized word selection, letter-guessing mechanics, and a visual representation of the hangman using a GUI.",
    },
    {
        id: 13,
        title: "Dice Adventure",
        stack_tags: ["Java", "LibGDX"],
        quick_description: "A turn-based dice combat auto-battler game developed using Java and LibGDX.",
        github_href: "https://github.com/mjwanless/COMP-2522-202410-Term-Project-MH",
        example_img: "/images/projects/Java-heraldo-game/1.jpg",
        project_imgs: [
            "/images/projects/Java-heraldo-game/1.jpg",
            "/images/projects/Java-heraldo-game/2.jpg",
            "/images/projects/Java-heraldo-game/3.jpg",
        ],
        full_description:
            "Dice Adventure is a turn-based combat game where players select character classes and battle against enemies using dice rolls. Each class has unique abilities that influence combat outcomes. The game features multiple arenas and a storyline. The game was built using Java and LibGDX for graphics and game mechanics.",
    },
];
